{
  "name": "AlgoNet",
  "version": "2.0.0",
  "random_seed": 42,
  "logging": {
    "filename": "logs/run.log",
    "filemode": "w",
    "level": "debug",
    "enable_formatter": false
  },
  "prepare": {
    "handler": "SourceDataset",
    "text": {
      "fields": {
        "statement": true,
        "input": true,
        "output": true
      }
    },
    "source": {
      "min_num_lines": 300,
      "remove_unused_fcalls": true,
      "remove_unused_code": true,
      "remove_imports": true,
      "compiler": "g++"
    },
    "parallel": false,
    "batch_size": 16
  },
  "raw_dataset": "data/datasets/dataset.json",
  "astminer": "astminer/lib-0.5.jar",
  "split": {
    "percentage": 0.15,
    "labels": [
      "math",
      "implementation",
      "graphs",
      "dp & greedy"
    ],
    "difficulty_based": true
  },
  "load_weights_from_epoch": 2,
  "model": "AlgoCode_C2V",
  "features": {
    "types": {
      "word2vec": {
        "size": 128,
        "window": 5,
        "min_count": 3,
        "workers": 32
      },
      "code2vec": {
        "max_contexts": 200,
        "max_height": 8,
        "max_width": 2,
        "ignore_path_ends": true
      },
      "safe": {
        "model":"safe/data/safe_trained_X86.pb",
        "instr_conv": "safe/data/i2v/word2id.json",
        "max_instr": 150
      }
    },
    "scenarios": {
      "word2vec_text": {
        "type": "word2vec",
        "input": "text",
        "field": "text"
      },
      "word2vec_code": {
        "type": "word2vec",
        "input": "code",
        "field": "tokens"
      },
      "code2vec": {
        "type": "code2vec",
        "input": "code",
        "field": "code2vec"
      },
      "safe": {
        "type": "safe",
        "input": "code",
        "field": "safe"
      }
    }
  },
  "pretrain": "word2vec_text",
  "encoders": {
    "lstm": {
      "hidden_size": 100,
      "dropout": 0.2,
      "regularizer": 0.01,
      "max_seq_len_code": 745,
      "max_seq_len_text": 900,
      "attention": true,
      "masking": true,
      "dtype": "float32"
    },
    "ast_lstm": {
      "max_seq_len": 200,
      "default_input_size": 1,
      "path_emb_size": 128,
      "token_emb_size": 128,
      "path_vocab_size": 113546,
      "token_vocab_size": 18024,
      "dtype": "int32",
      "attention": true,
      "dropout": 0.1
    },
    "safe_lstm": {
      "hidden_size": 100,
      "default_input_size": 100,
      "dropout": 0.2,
      "regularizer": false,
      "max_seq_len": 25,
      "attention": true,
      "masking": true,
      "input_size": 100,
      "dtype": "float32"
    }
  },
  "classifiers": {
    "default_dense": {
      "dropout": 0.1,
      "dense": [
        64
      ],
      "activation": "relu",
      "regularizer": 0.01
    },
    "cherry": {
      "dropout": 0.1,
      "dense": [
        4
      ],
      "activation": "sigmoid",
      "regularizer": 0.01
    }
  },
  "train": {
    "callbacks": [
      "early_stopping",
      "checkpoint"
    ],
    "num_epochs": 10,
    "batch_size": 128,
    "extra_supervision": false,
    "only_cf": false,
    "debug": false
  },
  "models": {
    "AlgoCode_W2V": {
      "encoders": {
        "input_type": "code",
        "inputs": [
          {
            "scenario": "word2vec_code",
            "field": "code",
            "encoder": "lstm"
          }
        ],
        "join_operation": "default"
      },
      "classifiers": [
        "default_dense",
        "cherry"
      ],
      "loss": "binary_crossentropy",
      "optimizer": "adam",
      "metrics": [
        "accuracy"
      ]
    },
    "AlgoCode_SAFE": {
      "encoders": {
        "input_type": "code",
        "inputs": [
          {
            "scenario": "safe",
            "field": "safe",
            "encoder": "safe_lstm"
          }
        ],
        "join_operation": "default"
      },
      "classifiers": [
        "default_dense",
        "cherry"
      ],
      "loss": "binary_crossentropy",
      "optimizer": "adam",
      "metrics": [
        "accuracy"
      ]
    },
    "AlgoCode_C2V": {
      "encoders": {
        "input_type": "code",
        "inputs": [
          {
            "scenario": "code2vec",
            "encoder": "ast_lstm",
            "field": "paths"
          }
        ],
        "join_operation": "default"
      },
      "classifiers": [
        "default_dense",
        "cherry"
      ],
      "loss": "binary_crossentropy",
      "optimizer": "adam",
      "metrics": [
        "accuracy"
      ]
    },
    "AlgoNetCode": {
      "encoders": {
        "input_type": "code",
        "inputs": [
          {
            "scenario": "word2vec_code",
            "field": "code",
            "encoder": "lstm"
          },
          {
            "scenario": "safe",
            "field": "safe",
            "encoder": "safe_lstm"
          },
          {
            "scenario": "code2vec",
            "encoder": "ast_lstm",
            "field": "paths"
          }
        ],
        "join_operation": "default"
      },
      "classifiers": [
        "default_dense",
        "cherry"
      ],
      "loss": "binary_crossentropy",
      "optimizer": "adam",
      "metrics": [
        "accuracy"
      ]
    }
  },
    "callbacks": {
    "early_stopping": {
      "patience": 2,
      "verbose": 1,
      "min_delta": 0.001,
      "mode": "auto",
      "monitor": "val_loss"
    },
    "checkpoint": {
      "mode": "auto",
      "save_best_only": true,
      "monitor": "val_loss",
      "verbose": 1
    }
  },
  "test": {
    "threshold": 0.4
  },
  "datasets": {}
}